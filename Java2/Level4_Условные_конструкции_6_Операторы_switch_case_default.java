package Java2;

import java.util.Scanner;

public class Level4_Условные_конструкции_6_Операторы_switch_case_default { /** оператор "switch-case" позволяет взять одну переменную и проверить её на множество различных значений */
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in); 
        System.out.print("Введите значение: ");
        int num = scan.nextInt();
        switch (num) { /** указываем для проверки значения первую часть оператора "switch" */
            case 1: System.out.println("Число равно 1");/** и указываем вторую часть оператора "case" для проверки переменной с множеством различных значений, и здесь прописываем возможные случаи сравнений */
            break; /** указываем на прекращение выполнения кода */
            case 2: System.out.println("Число равно 2");/** и указываем вторую часть оператора "case" для проверки переменной с множеством различных значений, и здесь прописываем возможные случаи сравнений */
            break; 
            case 5: System.out.println("Число равно 5");/** и указываем вторую часть оператора "case" для проверки переменной с множеством различных значений, и здесь прописываем возможные случаи сравнений */
            break; 
            case 10: System.out.println("Число равно 10");/** и указываем вторую часть оператора "case" для проверки переменной с множеством различных значений, и здесь прописываем возможные случаи сравнений */
            break;
            default: System.out.println("Default");/** в операторе "switch-case" есть оператор "default" - это как тот же самый "else", но только в "switch-case" */
                    /** и он будет выполняться в случае отклонения от заданных значений и если все предыдущие операторы не сработали */
        }          /** в операторе "switch-case" нельзя допустим проверить переменную на то что она больше или меньше числа "6", допустим, так как данный оператор работает только для проверки конкретных значений */
    }              /** при исп-нии оператора "default" можно не указывать "break", так как этого не требуется, но если указать, то ошибки не будет */                           
}







